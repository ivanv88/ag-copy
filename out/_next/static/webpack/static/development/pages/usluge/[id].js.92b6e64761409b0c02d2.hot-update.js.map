{"version":3,"file":"static/webpack/static/development/pages/usluge/[id].js.92b6e64761409b0c02d2.hot-update.js","sources":["webpack:///./components/page_components/service/service.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { useRouter } from 'next/router'\nimport { ColorContext } from '../../context/colorcontext'\nimport Data from '../../data/services.json'\n\n\nconst tableStyle = {\n    padding: \"1rem 0\",\n    borderTop: \"1px solid #b2b2b2\",\n    marginTop: \"4rem\"\n}\n\nconst tableTitleStyle = {\n    fontFamily: \"'Poppins', sans-serif\",\n    color: \"#333333\",\n    fontSize: \"1.2rem\",\n    textAlign: \"center\",\n    letterSpacing: \"3px\",\n    padding: \"2rem 0 1rem 0\",\n    textTransform: \"uppercase\"\n}\n\nconst titleStyle = {\n    fontFamily: \"'Playfair Display', serif\",\n    fontWeight: \"600\",\n    fontStyle: \"italic\",\n    color: \"#333333\",\n    fontSize: \"3rem\",\n    textAlign: \"center\",\n    letterSpacing: \"2px\",\n    padding: \"0 0 1rem 0\",\n}\n\nconst tableDataStyle = {\n    fontFamily: \"'Poppins', sans-serif\",\n    color: \"#333333\",\n    fontSize: \"1.2rem\",\n    textTransform: \"uppercase\",\n    color: \"#333333\",\n    letterSpacing: \"1px\",\n    padding: \"1rem 0 .4rem 1rem\",\n    borderBottom: \"1px solid #b2b2b2\",\n    wordBreak: \"break-word\"\n}\n\nconst paragraphStyle = {\n    width: \"80%\",\n    margin: \"0 auto\",\n    textAlign: \"center\",\n    fontFamily: \"'Poppins', sans-serif\",\n    fontSize: \"1.2rem\",\n    color: \"#333333\",\n}\n\nconst tableNoteStyle = {\n    fontFamily: \"'Playfair Display', serif\",\n    color: \"#333333\",\n    fontStyle: \"italic\"\n}\n\nconst build = (body) => {\n    let bodyArray = [];\n    if((body !== undefined) && (body !== null)) {\n        for(let i = 0; i < body.length; i++) {\n            if(body[i].type === \"p\") {\n                bodyArray.push(\n                <div key={ i * 789 } style={ paragraphStyle }>    \n                    <p key={ i * 89}>{ body[i].content }</p>\n                </div>\n                )\n            } \n            if(body[i].type === \"h2\") {\n                bodyArray.push(\n                <div key={ i * 66 }>\n                    <h2 style={ titleStyle } key={ i * 99}>{ body[i].content }</h2>\n                </div>\n                )\n            } \n            if(body[i].type === \"h3\") {\n                bodyArray.push(\n                <div key={ i * 55 }>\n                    <h2 style={ tableTitleStyle } key={ i * 97 }>{ body[i].content }</h2>\n                </div>\n                )\n            } \n            if(body[i].type === \"t\") {\n                bodyArray.push(\n                <div key={ i * 71 } style={ tableStyle }>\n                    <div key={i} \n                    style={{ display: \"grid\", gridTemplateColumns: \"repeat(\" + body[i].meta.width + \", 1fr)\"  }}>\n                        <div className=\"tableTitle\" style={{ gridColumn: \"span \" + body[i].meta.width }}>\n                            <h2 style={ tableTitleStyle } >{ body[i].meta.title }</h2>\n                        </div>\n                        { body[i].content.map((value, i) => (\n                            <div  className={ \"tableData\" } key={ i * 77 } style={ tableDataStyle }>{ value }</div>\n                        )) }\n                    </div>\n                <div style={ tableNoteStyle } >\n                    <p>{body[i].meta.note}</p>\n                </div>\n                </div>\n                )\n            } \n           \n        }\n        return bodyArray;\n    } else return null;\n}\nconst buildTables = (tables) => {\n    let tablesArray = [];\n    if(tables !== undefined) {\n        for(let i = 0; i < tables.lenght; i++) {\n            if(tables[i].type === \"p\") {\n                tables.push(<p key={i}>{ content[i].content }</p>)\n            } \n        }\n        return tablesArray;\n    } else return null;\n}\n\nconst Service = () => {\n    const router = useRouter();\n    const { color } = useContext(ColorContext);\n    const data = Data;\n    const title = data[router.query.id] !== undefined ? data[router.query.id].title : null;\n    const coverImage = data[router.query.id] !== undefined ? data[router.query.id].coverImage : null;\n    const body = build(data[router.query.id] !== undefined ? data[router.query.id].body : null);\n\n    return (\n        <div className=\"serviceWrapper\" >\n            <div className=\"spacer\" ></div>\n            <div className=\"container\">\n                <div className=\"service\" >\n                    <div className=\"coverImage\" ></div>\n                    <h1>{title}</h1>\n                    { body }\n                </div>\n           </div>\n    <style jsx>{`\n        .spacer {\n            width: 15vw;\n            min-height: 100vh;\n            min-width: 250px;\n        }\n        .serviceWrapper {\n            width: 100%;\n            height: 100%;\n            background-color: ${color};\n            display: flex;\n            padding: 130px 0 0 0;\n        }\n        .container {\n            width: calc(100% - 15vw);\n            min-width: calc(100% - 250px);\n        }\n        .container h1 {\n            text-align: center;\n        }\n        .service {\n            width: 80%;\n            min-width: 500px;\n            max-width: 1000px;\n            margin: 0 auto;\n        }\n        .service h1 {\n            font-family: 'Playfair Display', serif;\n            font-weight: 600;\n            font-style: italic;\n            color: #333333;\n            font-size: 3rem;\n            text-align: center;\n            letter-spacing: 2px;\n            padding: 0 0 1rem 0;\n        }\n        .coverImage {\n            height: 20vw;\n            width: 100%;\n            background-image: url('${ coverImage }');\n            background-size: cover;\n            background-position: center;\n        }\n        @media(max-width: 760px) {\n            .spacer {\n                display: none;\n            }\n            .container {\n                width: 100%;\n            }\n            .service {\n                width: 95%;\n                min-width: 0;\n            }\n            .coverImage {\n                height: 250px;\n            }\n            .serviceWrapper {\n                padding-top: 70px;\n            }\n            :global(.tableData) {\n                font-size: .5rem;\n            }\n        }\n    \n    `}</style>\n        </div>\n    )\n}\n\nexport default Service"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AA6EA;AACA;AACA;;;;A","sourceRoot":""}